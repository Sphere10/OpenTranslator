@model OpenTranslator.Models.Input.TranslationInput
	@using (Html.BeginForm())
	{
		<span style="color:red; margin-left:120px">@ViewBag.errormsg</span>
		@Html.HiddenFor(o => o.Id)
		@Html.EditorFor(o => o.TextId)
		@Html.EditorFor(o => o.LanguageCode)
		@Html.EditorFor(o => o.TranslationText)
		@Html.HiddenFor(o => o.ModeOfTranslation)
	}
<br /><br />
@(Html.Awe().Grid("Translation")
			.Url(Url.Action("TranslationItems", "Admin"))
			.Parameter("LanguageCode", Model.LanguageCode)
			.Parameter("TextId", Model.TextId)
			.Groupable(false)
			.Width(650)
			.Height(250)
			.Columns(
			new Column { Bind = "Translated_Text" },
			new Column { Bind = "Votes" },
			new Column
			{
				Width = 50,
				ClientFormatFunc = "toggleButton"
				//ClientFormat = "<i class='awe-sord' style='font-size:48px; color: red'></i>",

			}))


<script>
	$('#LanguageCode-awed').prop('disabled', true);
	$('#TextId-awed').prop('disabled', true);
	if (@Model.ModeOfTranslation == 2)
	{
		$('.awe-okbtn').prop('disabled', true);
		$('#TranslationText').prop('readonly', true);
	}


	$("#TranslationText").width("400px");
	var toggleButton = function (model, prop) {

		var response;
		$.ajax({
			url: '@Url.Action("GetUserCurrentVote", "Admin")',
			type: 'POST',
			async: false,
			dataType: 'json',
			cache: false,
			data: { Id: model.Id },
			success: function (value) {
				response = value;
			},
			error: function (value) {
				response = value;
			}
		});

		if (response.value == true)
			return '<img src="Content/themes/wui/Filled.png" height="18" width="18" style="cursor: pointer;"  onclick="GetCount(\'Like\',\'' + model.TextId + '\',\'' + model.Id + '\',\'' + model.LanguageCode + '\')" >';
			else
			return '<img src="Content/themes/wui/Blanck.png" height="18" width="18" style="cursor: pointer;"  onclick="GetCount(\'Like\',\'' + model.TextId + '\',\'' + model.Id + '\',\'' + model.LanguageCode + '\')" >';
	}

	function GetCount(value, textid, id, code) {
		$.ajax({
			url: '@Url.Action("VoteCount", "Admin")',
			type: 'POST',
			dataType: 'json',
			cache: false,
			data: { vote: value, textid: textid, TranslationId: id, code: code },
			success: function (value) {
				$('#Translation').data('api').load({}).success(toggleButton(value, "change"));
			},
			error: function () {
				$("#spnerror").text("Translation Mode is Locked or Selected.");
			}
    });

	}

</script>

