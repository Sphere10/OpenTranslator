@{
	ViewBag.Title = "Open Translation";
}


<div class="container-fluid">
	<div class="row">
		<div class="col-md-12">
			@Html.InitCrudPopupsForGrid("OriginalTextGrid", "Admin", 470, 1000, "String")
			<style>
				.awe-ajaxcheckboxlist-field li {
					display: inline-block;
					padding:5px;
				}
				.awe-missingcheckbox {
					padding: 6px;
				}
			</style>
			@(Html.Awe().InitPopupForm()
				.Name("Login")
				.Url(Url.Action("Create", "Login"))
				.Title("Admin Login")
				.Width(100)
				.Success("RedirectToAdmin"))

			<div id="myDiv" data-value="@Request.RequestContext.HttpContext.Session["SelectedColumns"]"></div>
			@(Html.Awe().InitPopupForm()
				.Name("EditTranslation")
				.Url(Url.Action("Edit", "User"))
				.Title("Edit Translation")
				.Success("UpdateGrid"))

			

			@(Html.Awe().Grid("OriginalTextGrid")
			.Mod(o => o.ColumnsSelector().PageSize().PageInfo().Loading().AutoMiniPager())
			.Url(Url.Action("OriginalTextGridGetItems", "Admin"))
			.Parameter("UserType", "User")
			.Persistence(Persistence.Session)
			.ColumnsPersistence(Persistence.Session)
			.Groupable(false)
			.Columns())
			<br /><br />
			<fieldset>
				<legend> Options </legend>
				<div class="bar">
					@Html.Awe().AjaxCheckboxList("chkColumns").Url(Url.Action("GetColumnsItems", "Admin")).Load(true)
				</div>
				<div class="bar awe-missingcheckbox">
					<input type="checkbox" id="chkMissingTrans">
					<label for="chkMissingTrans">
						Show missing translations for selected languages
					</label>
				</div>
			</fieldset>
		</div>
	</div>
</div>

<br /><br />
<script>

	$(document).ready(function () {
		if (getCookie("MissingTrans") == "true")
			$('#chkMissingTrans').attr('checked', 'checked')
	});

	$(function () {
		$('#chkColumns').change(function () {
			var val = $('#chkColumns').val();
			var clearSession = false;
			if (!val) {
				val = "[]";
				var clearSession = true;
			}
			$('#OriginalTextGrid').data('api').load({ oparams: { selectedColumns: JSON.parse(val), choosingColumns: true, clearsession: clearSession } });
		});

		$('#chkMissingTrans').change(function () {
			if ($(this).is(":checked")) {
				$(this).attr("checked", true);
			}
			setCookie("MissingTrans", $(this).is(':checked'), 1);
			$('#chkColumns').change();
		});
	});

	function disableBack() {
		window.location.hash = "User";
		window.location.hash = "Again-No-back-button";//again because google chrome don't insert first hash into history
		window.onhashchange = function () { window.location.hash = ""; }
		//session();
	}

	function session()
	{
		$.ajax({
			url: '@Url.Action("getSession", "User")',
			type: 'POST',
			dataType: 'json',
			cache: false,
			success: function (data) {
				if (data.selectedColumns == null)
					@Html.Awe().OpenPopup("Login");
			},
			error: function (data) {
			}
    });
	};

	window.onload = disableBack();
	window.onpageshow = function (evt) { if (evt.persisted) disableBack() }

	function RedirectToAdmin() {
		var url = '@Url.Action("Index", "Admin")';
		window.location = url;
	}
	function UpdateGrid(result, popup) {
		$('#OriginalTextGrid').data('api').load({});
	}
	function getVal(i, columnname) {
		return function (model) {
			var div = "";
			var a = model.Values[i];
			if (a != "")
				div = '<span style="width:90% ; overflow: hidden;float: left; text-overflow: ellipsis;">' + a + '</span><span style="cursor: pointer; display: inline-flex; float: right;" class="ico-edit" onclick="awe.open(\'EditTranslation\', { params: { TextId: \'' + model.TextId + '\', code : \'' + columnname + '\' } })" ></span>';
			else
				div = '<span style="cursor: pointer; display: inline-flex; float: right;" class="ico-edit" onclick="awe.open(\'EditTranslation\', { params: { TextId: \'' + model.TextId + '\', code : \'' + columnname + '\' } })" ></span>';
			return div;
		};
	}
	function setCookie(name, value, days) {
		var d = new Date;
		d.setTime(d.getTime() + 24 * 60 * 60 * 1000 * days);
		document.cookie = name + "=" + value + ";path=/;expires=" + d.toGMTString();
	}
	function getCookie(c_name) {
		var i, x, y, ARRcookies = document.cookie.split(";");
		for (i = 0; i < ARRcookies.length; i++) {
			x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
			y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
			x = x.replace(/^\s+|\s+$/g, "");
			if (x == c_name) {
				return unescape(y);
			}
		}
	}

</script>



