@{
	ViewBag.Title = "Open Translation";
}
<input type="button" value="User Screen" onclick="location.href='@Url.Action("Index", "User")'" />
<input type="button" value="Admin Screen" onclick="location.href='@Url.Action("Index", "Admin")'" />
<input type="button" value="Pascal Translation Screen" onclick="location.href='@Url.Action("Index", "PascalTranslation")'" />
@Html.InitCrudPopupsForGrid("OriginalTextGrid", "Admin", 470, 1000, "String")
<center><h2>Open Language Translation - Pascal Translation </h2></center>

<div id="divButtons">
<button type="button" class="awe-btn mbtn" onclick='$("#exportForm").hide();$("#importForm").toggle();'>Import</button>
<button type="button" class="awe-btn mbtn" onclick='$("#importForm").hide();$("#exportForm").toggle();'>Export</button>
</div>
<div id="importForm">
@using (Html.BeginForm("GetUploadedFile", "PascalTranslation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	<br />
	<span style="color:red;">@ViewBag.errormsg</span><br/>
		<input type="file" name="postedFile" id="postedFile" />
		<input type="submit"  class="awe-btn mbtn" value="Ok" />
		<input type="hidden" id="hdnvalue" value="@ViewBag.errormsg" />
		<button type="button" class="awe-btn mbtn" onclick="location.href='@Url.Action("Index", "PascalTranslation")'">Cancel</button>
}
</div>
<div id="exportForm">
@using (Html.BeginForm("DownloadPoFile", "PascalTranslation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	<br />
	<span style="color:red;">@ViewBag.errormsgexport</span><br />
		<input type="file" name="postedFile" id="postedFile" />
		<input type="submit"  class="awe-btn mbtn" value="Ok" />
		<button type="button" class="awe-btn mbtn" onclick="location.href='@Url.Action("Index", "PascalTranslation")'">Cancel</button>
}
</div>

<br /><br />

@(Html.Awe().Grid("OriginalTextGrid")
			.Url(Url.Action("OriginalTextGridGetItems","Admin"))
			.Parameter("UserType","User")
			.Groupable(false)
			.Columns())

<br /><br />
@(Html.Awe().InitPopupForm()
				.Name("pf1")
				.Url(Url.Action("Edit", "PascalTranslation"))
				.Title("Edit Translation")
				.Success("UpdateGrid"))
<script>
	function UpdateGrid(result, popup) {
		$('#OriginalTextGrid').data('api').load({});
	}
	@*if (!$("#hdnValue").val())
	{
		debugger;
		$("#importForm").hide();
		$("#divButtons").show();
	}
	if (!@Html.Raw(Json.Encode(ViewBag.errormsgexport )))
	{
		debugger;
		$("#exportForm").hide();
		$("#divButtons").show();
	}*@

	var myVal = '@ViewBag.errormsg';
    var va = '@ViewBag.errormsgexport';

    if (myVal!='')
    {
		//$("#importForm").toggle();
		var e = document.getElementById("importForm");
		e.style.display = "block";
    }
    else
    {
		var e = document.getElementById("importForm");
        e.style.display = "none";
    }

    if (va!='')
    {
		//var e = document.getElementById("exportForm");
		//e.style.display = "block";
		$("#exportForm").show();
    }
    else
    {
		$("#exportForm").hide();
    }



	function getVal(i, columnname) {
		return function (model) {
			var div = "";
			var a = model.Values[i];
			if (a != "")
				div = '<a onclick="awe.open(\'pf1\', { params: { TextId: \'' + model.TextId + '\', code : \'' + columnname + '\' } })">' + a + '</a>';
			else
				div = '<a onclick="awe.open(\'pf1\', { params: { TextId: \'' + model.TextId + '\', code : \'' + columnname + '\' } })"><div style="min-height:20px; min-width:100px;">' + "  " + '</div></a>';
			return div;
		};
	}
</script>






